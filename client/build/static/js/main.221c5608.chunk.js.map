{"version":3,"sources":["components/Jumbo/index.js","components/Nav/index.js","utils/API.js","components/saveBtn/index.js","components/bookCard/index.js","pages/search.js","components/deleteBtn/index.js","components/mongoCard/index.js","pages/mybooks.js","components/App.js","serviceWorker.js","index.js"],"names":["Jumbo","Jumbotron","Container","className","Header","Navbar","bg","variant","Brand","href","Nav","Link","getBooks","axios","get","getBook","id","deleteBook","delete","saveBook","bookData","post","SaveBtn","props","data","console","log","API","then","res","catch","err","state","title","authors","description","image","link","Button","onClick","Component","BookCard","Card","border","Title","Col","Body","Row","src","alt","target","rel","SearchCom","handleInputChange","event","name","value","setState","handleFormSubmit","preventDefault","books","searchTerm","theseBooks","items","map","item","push","volumeInfo","imageLinks","thumbnail","infoLink","Form","Group","controlId","Control","type","onChange","this","placeholder","book","key","DeleteBtn","MongoCard","Mybooks","loadBooks","_id","App","exact","path","component","Search","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.221c5608.chunk.js","sourcesContent":["import React from \"react\";\nimport { Jumbotron, Container } from \"react-bootstrap\";\nimport \"./style.css\";\n\nfunction Jumbo() {\n  return(\n    <Jumbotron>\n  <Container className=\"text-center\">\n    <h1>Google Book Search</h1>\n    <p>\n      Search for and Save Books of Interest\n    </p>\n  </Container>\n</Jumbotron>\n  )\n}\n\nexport default Jumbo;","import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport \"./style.css\";\n\nfunction Header() {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\">\n    <Navbar.Brand href=\"/search\">Google Books</Navbar.Brand>\n    <Nav className=\"mr-auto\">\n      <Nav.Link href=\"/search\">Search</Nav.Link>\n      <Nav.Link href=\"/mybooks\">My Books</Nav.Link>\n    </Nav>\n  </Navbar>\n  )\n}\n\nexport default Header;","import axios from \"axios\";\n\nexport default {\n  // Gets all books\n  getBooks: function() {\n    return axios.get(\"/api/books/\");\n  },\n  // Gets the book with the given id\n  getBook: function(id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function(bookData) {\n    return axios.post(\"/api/books/\", bookData);\n  }\n};\n","import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport \"./style.css\";\nimport API from \"../../utils/API\";\n\nexport default class SaveBtn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        title: props.data.title,\n        authors: props.data.authors,\n        description: props.data.description,\n        image: props.data.image,\n        link: props.data.link\n      }\n    }\n  }\n\n  saveBook = data => {\n\n    console.log(data);\n\n    API.saveBook(data)\n      .then( res => console.log(\"book saved\"))\n      .catch( err => console.log(err))\n  }\n\n  render() {\n    return(\n      <Button\n        className=\"myButton\" \n        variant=\"dark\"\n        onClick={ () => { this.saveBook(this.state.data) }}\n        >\n        Save Book\n      </Button>\n    )\n  }\n}","import React from \"react\";\nimport { Card, Row, Col, Button } from \"react-bootstrap\";\nimport SaveBtn from \"../saveBtn\";\nimport \"./style.css\";\n\n\nfunction BookCard(props) {\n\n  return(\n    <Card border=\"dark\" className=\"myCard\">\n      <Card.Title>\n        <Col>\n          <p className=\"cardTitle\"> { props.title } </p> \n          \n        </Col>\n        <Col>\n          <p className=\"author\"> { props.authors } </p>\n        </Col>\n      </Card.Title>\n      <Card.Body>\n        <Row>\n          <img className=\"col-md-2 myImg\" src={props.image} alt={props.title} />\n          <p className=\"col-md-10\"> { props.description } </p>\n        </Row>\n        <Row>\n          <a className=\"myButton\" href={props.link} target=\"_blank\" rel=\"noopener noreferrer\"><Button variant=\"dark\">Details</Button></a>\n          <SaveBtn data={props}/>\n        </Row>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default BookCard;\n","import React, { Component } from \"react\";\nimport Jumbo from \"../components/Jumbo\";\nimport Header from \"../components/Nav\";\nimport { Container, Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport BookCard from \"../components/bookCard\"\n\nexport default class SearchCom extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      books: [],\n      searchTerm: \"\",\n    }\n  }\n\n  // 3. onClick of save button => API.saveBook() ***** still getting 404 not found error\n\n\n  handleInputChange = event => {\n    \n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n\n    this.setState({ books: [] })\n\n    axios\n      .get(\"https://www.googleapis.com/books/v1/volumes?q=\" + this.state.searchTerm + \"&key=AIzaSyBUyIx7bDmHsfjsBUhwi4wj_gj9amMJKdk\")\n      .then((data) => {\n         let theseBooks = [];\n\n         data.data.items.map( item => {\n          theseBooks.push({\n            title: item.volumeInfo.title,\n            authors: item.volumeInfo.authors,\n            description: item.volumeInfo.description,\n            image: item.volumeInfo.imageLinks.thumbnail,\n            link: item.volumeInfo.infoLink\n          })\n        })\n        this.setState({ books: theseBooks })\n      })\n      .catch( err => console.log(err))\n  }\n\n  render() {\n    return(\n      <Container>\n        <Header />\n        <Jumbo/>\n        <Container>\n        <Form>\n          <Form.Group controlId=\"formBasicSearch\">\n            <Form.Control name=\"searchTerm\" type=\"text\" onChange={this.handleInputChange} placeholder=\"Search for books...\" />\n          </Form.Group>\n          <Button variant=\"dark\" type=\"submit\" onClick={this.handleFormSubmit}>\n            Search\n          </Button>\n        </Form>\n        \n        <Container>\n          {console.log(this.state.books)}\n          { this.state.books.map( book => {\n            return(\n              <BookCard \n                key={book.title}\n                title={book.title} \n                authors={book.authors} \n                image={book.image}\n                description={book.description}\n                link={book.link}\n              />\n              )\n            })}\n        </Container>\n        </Container>\n      </Container>\n    )\n  }\n}","import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport \"./style.css\";\nimport API from \"../../utils/API\";\n\nexport default class DeleteBtn extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return(\n      <Button\n        className=\"myButton\" \n        variant=\"dark\"\n        onClick={ () => { this.props.data.deleteBook(this.props.data.id) }}\n        >\n        Delete\n      </Button>\n    )\n  }\n}","import React from \"react\";\nimport { Card, Row, Col, Button } from \"react-bootstrap\";\nimport DeleteBtn from \"../deleteBtn\";\nimport \"./style.css\";\n\n\nfunction MongoCard(props) {\n\n  return(\n    <Card border=\"dark\" className=\"myCard\">\n      <Card.Title>\n        <Col>\n          <p className=\"cardTitle\"> { props.title } </p> \n          \n        </Col>\n        <Col>\n          <p className=\"author\"> { props.authors } </p>\n        </Col>\n      </Card.Title>\n      <Card.Body>\n        <Row>\n          <img className=\"col-md-2 myImg\" src={props.image} alt={props.title} />\n          <p className=\"col-md-10\"> { props.description } </p>\n        </Row>\n        <Row>\n          <a className=\"myButton\" href={props.link} target=\"_blank\" rel=\"noopener noreferrer\"><Button variant=\"dark\">Details</Button></a>\n          <DeleteBtn data={props}/>\n        </Row>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default MongoCard;","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport { Container } from \"react-bootstrap\";\nimport Jumbo from \"../components/Jumbo\";\nimport Header from \"../components/Nav\";\nimport MongoCard from \"../components/mongoCard\";\n\nexport default class Mybooks extends Component {\n\n  state = {\n    books: []\n  }\n\n  componentDidMount() {\n    this.loadBooks();\n  }\n\n  loadBooks = () => {\n    API.getBooks()\n      .then( res => this.setState({ books: res.data }))\n      .catch( err => console.log(err))\n  }\n\n  deleteBook = id => {\n\n    API.deleteBook(id)\n      .then( res => {\n        console.log(\"book deleted\")\n        this.loadBooks()\n      })\n      .catch( err => console.log(err));\n  }\n\n\n  render() {\n    return(\n      <Container>\n        <Header />\n        <Jumbo />\n        <Container>\n          {console.log(this.state.books)}\n          { this.state.books.map( book => {\n            return(\n              <MongoCard \n                id={book._id}\n                key={book._id}\n                title={book.title} \n                authors={book.authors} \n                image={book.image}\n                description={book.description}\n                link={book.link}\n                deleteBook={this.deleteBook}\n              />\n              )\n            })}\n        </Container>\n      </Container>\n      \n    )\n  }\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Search from \"../pages/search\";\nimport Mybooks from \"../pages/mybooks\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={Search} />\n          <Route exact path=\"/search\" component={Search} />\n          <Route exact path=\"/mybooks\" component={Mybooks} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'; \n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister()\n"],"sourceRoot":""}